{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/App.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Notification/Notification.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","components/ContactForm/ContactForm.js","redux/contacts/contactsSelectors.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","components/Notification/Notification.js","redux/contacts/contactsReducers.js","redux/store.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","axios","default","baseURL","addContact","name","number","dispatch","contactsActions","post","then","data","catch","error","fetchContacts","fetchContactRequest","get","fetchContactSuccess","fetchContactError","removeContact","id","delete","ContactForm","state","handleSubmit","e","preventDefault","props","onAddContact","setState","handleChange","target","value","onSubmit","this","className","styles","form","label","input","type","onChange","placeholder","btn","Component","mapDispatchToProps","contactsOperations","connect","getItems","contacts","items","getFilter","filter","getVisibleContacts","createSelector","contact","toLowerCase","includes","getContactsById","_","contactId","find","item","ownProps","contactsSelectors","onRemove","removeContacts","section__btn","onClick","TransitionGroup","component","list","map","CSSTransition","timeout","classNames","unmountOnExit","onChangeFilter","App","onFetchContacts","box","in","appear","title","defaultModules","set","PNotifyMobile","createReducer","action","payload","trim","text","animation","animateSpeed","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ce73512.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1du9m\",\"label\":\"ContactForm_label__1Vwh0\",\"input\":\"ContactForm_input__2A2CV\",\"btn\":\"ContactForm_btn__1H_Ci\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__1qKKG\",\"title\":\"App_title__1rYTc\",\"appear\":\"App_appear__2rPI8\",\"appearActive\":\"App_appearActive__3IbfG\",\"enter\":\"App_enter__L8dFr\",\"enterActive\":\"App_enterActive__3JlCl\",\"exit\":\"App_exit__16R5b\",\"exitActive\":\"App_exitActive__3jcZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactListItem_enter__3rk-1\",\"enterActive\":\"ContactListItem_enterActive__10vSC\",\"exit\":\"ContactListItem_exit__-sQa0\",\"exitActive\":\"ContactListItem_exitActive__f29gi\",\"item\":\"ContactListItem_item__2ui87\",\"section__btn\":\"ContactListItem_section__btn__24Q5X\",\"btn\":\"ContactListItem_btn__1y3mR\",\"list\":\"ContactListItem_list__13Do0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__3x1wE\",\"enterActive\":\"ContactList_enterActive__2gG8P\",\"exit\":\"ContactList_exit__AdViB\",\"exitActive\":\"ContactList_exitActive__3ZZM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2XBJY\",\"label\":\"Filter_label__VLO29\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Notification_appear__f0VOG\",\"appearActive\":\"Notification_appearActive__8lWGt\",\"enter\":\"Notification_enter__X_SiV\",\"enterActive\":\"Notification_enterActive__2Azvs\",\"exit\":\"Notification_exit__23NFv\",\"exitActive\":\"Notification_exitActive__1o7LT\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactError = createAction('contacts/addError');\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchError');\r\n\r\nconst removeContactRequest = createAction('contacts/removeRequest');\r\nconst removeContactSuccess = createAction('contacts/removeSuccess');\r\nconst removeContactError = createAction('contacts/removeError');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  changeFilter,\r\n};\r\n","import axios from 'axios';\r\nimport contactsActions from './contactsActions';\r\n\r\naxios.default.baseURL = 'http://localhost:4040';\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  dispatch(contactsActions.addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', { name, number })\r\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(contactsActions.fetchContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(contactsActions.fetchContactSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.fetchContactError(error)));\r\n};\r\n\r\nconst removeContact = id => dispatch => {\r\n  dispatch(contactsActions.fetchContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(({ data }) => dispatch(contactsActions.removeContactSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.removeContactError(error)));\r\n};\r\n\r\nexport default { addContact, fetchContacts, removeContact };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onAddContact(name, number);\r\n\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label className={styles.label}>\r\n          Name:\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter name\"\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number:\r\n          <input\r\n            className={styles.input}\r\n            type=\"number\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter number\"\r\n          ></input>\r\n        </label>\r\n\r\n        <button type=\"submit\" className={styles.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsOperations.addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getItems = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getItems, getFilter],\r\n  (items, filter) => {\r\n    return items.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nconst getContactsById = createSelector(\r\n  [(_, contactId) => contactId, getItems],\r\n  (contactId, items) => {\r\n    return items.find(item => item.id === contactId);\r\n  },\r\n);\r\n\r\nexport default {\r\n  getItems,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  getContactsById,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport contactsSelectors from '../../../redux/contacts/contactsSelectors';\r\nimport contactsOperations from '../../../redux/contacts/contactsOperations';\r\n\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, id, number, onRemove }) => {\r\n  return (\r\n    <li key={id} className={styles.item}>\r\n      <p>{name}:</p>\r\n      <p>{number}</p>\r\n      <section className={styles.section__btn}>\r\n        <button className={styles.btn} type=\"button\" onClick={onRemove}>\r\n          Delete\r\n        </button>\r\n      </section>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const contact = contactsSelectors.getContactsById(state, ownProps.id);\r\n  return {\r\n    ...contact,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemove: () => dispatch(contactsOperations.removeContacts(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport ContactListItem from './ContactListItem/ContactListItem';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts }) => (\r\n  <TransitionGroup component=\"ul\" className={styles.list}>\r\n    {contacts.map(({ id }) => (\r\n      <CSSTransition key={id} timeout={1000} classNames={styles} unmountOnExit>\r\n        <ContactListItem key={id} id={id} />\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div>\r\n      <label className={styles.label}>\r\n        Find contacts by name:\r\n        <input\r\n          className={styles.filter}\r\n          placeholder=\"Enter name\"\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.changeFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\nimport contactsOperations from '../redux/contacts/contactsOperations';\r\n\r\nimport styles from './App.module.css';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.box}>\r\n        <CSSTransition\r\n          in={true}\r\n          appear\r\n          timeout={500}\r\n          classNames={styles}\r\n          unmountOnExit\r\n        >\r\n          <h1 className={styles.title}>Phonebook</h1>\r\n        </CSSTransition>\r\n\r\n        <ContactForm />\r\n\r\n        <CSSTransition\r\n          in={true}\r\n          timeout={250}\r\n          classNames={styles.filter}\r\n          unmountOnExit\r\n        >\r\n          <Filter />\r\n        </CSSTransition>\r\n\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: contactsOperations.fetchContacts,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { CSSTransition } from 'react-transition-group';\r\nimport { error, defaultModules } from '@pnotify/core/dist/PNotify.js';\r\nimport * as PNotifyMobile from '@pnotify/mobile/dist/PNotifyMobile.js';\r\nimport '@pnotify/core/dist/PNotify.css';\r\nimport '@pnotify/core/dist/BrightTheme.css';\r\n\r\nimport styles from './Notification.module.css';\r\n\r\ndefaultModules.set(PNotifyMobile, {});\r\n\r\nexport default function errorMessage(name) {\r\n  <CSSTransition in={true} key={name} appear timeout={250} classNames={styles}>\r\n    {error({\r\n      text: `${name} is already in contacts!`,\r\n      animation: 'fade',\r\n      animateSpeed: '5000ms',\r\n    })}\r\n  </CSSTransition>;\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contactsActions';\r\n\r\nimport errorMessage from '../../components/Notification/Notification';\r\n\r\nconst addContacts = (state, action) => {\r\n  const names = state.map(item => item.name.toLowerCase());\r\n  const isNotUniqueContact = names.includes(\r\n    action.payload.contact.name.toLowerCase().trim(),\r\n  );\r\n\r\n  if (isNotUniqueContact) {\r\n    errorMessage(action.payload.contact.name);\r\n    return state;\r\n  } else {\r\n    return [...state, action.payload];\r\n  }\r\n};\r\n\r\nconst removeContacts = (state, action) => {\r\n  return state.filter(({ id }) => id !== action.payload);\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.fetchContactsSuccess]: (_, action) => action.payload,\r\n  [contactsActions.addContactSuccess]: addContacts,\r\n  [contactsActions.removeContactSuccess]: removeContacts,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducers\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}